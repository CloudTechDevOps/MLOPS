name: Deploy Flask ML App with Health Check and Rollback

on:
  push:
    branches: [ main ]            # ✅ Auto-trigger on code push
  workflow_dispatch:              # ✅ Manual trigger via GitHub UI

jobs:
  deploy:
    name: Deploy to EC2 with Health Check and Rollback
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up SSH key
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Backup existing app on EC2
        run: |
          ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_HOST }} "
            if [ -d ~/mlapp ]; then
              echo '📦 Backing up current app to ~/mlapp-backup'
              rm -rf ~/mlapp-backup
              cp -r ~/mlapp ~/mlapp-backup
            else
              echo 'ℹ️ No existing app to backup'
            fi
          "

      - name: Copy app code to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_HOST }} "mkdir -p ~/mlapp"
          scp -o StrictHostKeyChecking=no -r app/* ec2-user@${{ secrets.EC2_HOST }}:~/mlapp/

      - name: Install Python & pip
        run: |
          ssh -tt ec2-user@${{ secrets.EC2_HOST }} "
            sudo yum install -y python3 &&
            python3 -m ensurepip --upgrade &&
            pip3 install --upgrade pip setuptools
          "

      - name: Install Python dependencies
        run: |
          ssh -tt ec2-user@${{ secrets.EC2_HOST }} "
            cd ~/mlapp &&
            pip3 install -r requirements.txt
          "

      - name: Restart Flask App (Clean Start + Version Info)
        run: |
          ssh -tt ec2-user@${{ secrets.EC2_HOST }} "
            echo '🛑 Killing any old app...'
            pkill -f app.py || echo 'No old app running.'

            echo '📁 App files:'
            ls -l ~/mlapp

            echo '🧾 Version Info:'
            grep version ~/mlapp/app.py || echo 'No version tag in app.py'

            echo '🚀 Starting app...'
            cd ~/mlapp &&
            nohup python3 app.py > output.log 2>&1 &

            sleep 10

            echo '📄 Output log:'
            if [ -f output.log ]; then
              tail -n 20 output.log
            else
              echo '❌ No output.log - App may have failed.'
            fi
          "

      - name: Run Health Check
        run: |
          echo "🩺 Performing health check..."
          curl --fail http://${{ secrets.EC2_HOST }}:5000/health

      - name: Notify on Success
        if: success()
        run: echo "✅ Deployment successful. Health check passed."

      - name: Rollback on Failure
        if: failure()
        run: |
          echo "❌ Health check failed. Rolling back..."
          ssh -tt ec2-user@${{ secrets.EC2_HOST }} "
            if [ -d ~/mlapp-backup ]; then
              echo '🔁 Rolling back to previous version...'
              rm -rf ~/mlapp
              mv ~/mlapp-backup ~/mlapp

              pkill -f app.py || echo 'No old app to kill'

              cd ~/mlapp &&
              nohup python3 app.py > output.log 2>&1 &

              sleep 10

              echo '🧾 Version after rollback:'
              grep version app.py || echo 'No version info'

              echo '🔁 Rechecking health after rollback...'
              curl --fail http://127.0.0.1:5000/health \
                && echo '✅ Rollback successful.' \
                || echo '❌ Rollback health check failed.'
            else
              echo '❌ No backup found to rollback.'
            fi
          " || echo '❌ SSH or rollback failed.'
