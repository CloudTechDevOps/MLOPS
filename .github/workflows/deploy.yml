name: Deploy Flask ML App with Health Check

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # Optional: manual trigger from GitHub UI

jobs:
  deploy:
    name: Deploy to EC2 and Run Health Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up SSH key
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Copy App Files to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_HOST }} "mkdir -p ~/mlapp"
          scp -r app/* ec2-user@${{ secrets.EC2_HOST }}:~/mlapp/

      - name: Install Python & pip on EC2
        run: |
          ssh -tt ec2-user@${{ secrets.EC2_HOST }} "
            sudo yum install -y python3 &&
            python3 -m ensurepip --upgrade &&
            pip3 install --upgrade pip setuptools
          "

      - name: Install Python dependencies
        run: |
          ssh -tt ec2-user@${{ secrets.EC2_HOST }} "
            cd ~/mlapp &&
            pip3 install -r requirements.txt
          "

      - name: Start Flask App with Debugging
        run: |
          ssh -tt ec2-user@${{ secrets.EC2_HOST }} "
            echo 'üìÅ Listing ~/mlapp directory:' &&
            ls -l ~/mlapp

            echo 'üêç Python version:' &&
            python3 --version

            echo 'üöÄ Starting Flask App...' &&
            cd ~/mlapp &&
            nohup python3 app.py > output.log 2>&1 &

            sleep 5

            echo 'üìÑ Checking output.log:' &&
            if [ -f output.log ]; then
              cat output.log
            else
              echo '‚ùå output.log not found - app likely crashed.'
            fi
          "

      - name: Wait for App to Start
        run: sleep 10

      - name: Run Health Check
        run: |
          curl --fail http://${{ secrets.EC2_HOST }}:5000/health

      - name: Notify on Success
        if: success()
        run: echo "‚úÖ Deployment succeeded and health check passed."

      - name: Auto Rollback Simulation (optional)
        if: failure()
        run: echo "‚ùå Deployment failed. Please rollback to previous version."
